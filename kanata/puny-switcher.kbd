#|
Puny Switcher: script for correcting text typed in a wrong layout
and stateless layout switching in X11 and GNOME
https://github.com/roadkell/puny-switcher

This is a sample config file for kanata keyboard remapper. It can be used
with Puny Switcher as-is or integrated into a bigger custom config.
https://github.com/jtroo/kanata

Download and install kanata from the official repository. You need
"kanata_cmd_allowed" version, as it allows executing external commands:
https://github.com/jtroo/kanata/releases/latest

Location of puny-switcher.sh script can be provided via PATH env variable
in kanata systemd service file:
Environment=PATH=%h/.local/bin
Alternatively, use absolute path here or execute command via a shell, see
https://github.com/jtroo/kanata/blob/main/docs/config.adoc#cmd

Actions on Shift keys:
- tap left Shift: switch to first layout
- tap right Shift: switch to second layout
- double-tap any Shift: convert a single word and switch layout
- triple-tap any Shift: convert a line up to the cursor and switch layout
- hold Shift: default Shift behaviour (after a timeout)
- Shift + any key: default Shift behaviour (immediately)

Actions on Pause key:
- Pause: convert a single word and switch layout
- Ð¡trl-Pause: convert a line up to the cursor and switch layout
- Shift-Pause: convert selection

Hotkeys can be redefined in defsrc section. For example, you can use PrtSc
key instead of Pause by replacing "pause" with "sys". List of available
key names is in "str_to_oscode" and "default_mappings" functions here:
https://github.com/jtroo/kanata/blob/main/parser/src/keys/mod.rs
|#

(defcfg
	danger-enable-cmd yes
	process-unmapped-keys yes
)

(defsrc
	;; Physical keyboard layout
	pause
	lshift rshift
	lctrl rctrl
)

(defalias
	;; Invoke Puny Switcher with arguments
	puny-get (cmd puny-switcher.sh "get")
	puny-switch (cmd puny-switcher.sh "switch")
	puny-set0 (cmd puny-switcher.sh "iset" 0)
	puny-set1 (cmd puny-switcher.sh "iset" 1)
	puny-conv (cmd puny-switcher.sh "convert")
	puny-rst (cmd puny-switcher.sh "restore")

	;; Convert selection, paste result, restore clipboard, switch layout
	puny-sel (macro @puny-conv 50 S-ins 50 @puny-rst 10 @puny-switch)
	;; Select a word, convert, paste result, restore clipboard, switch layout
	puny-word (macro S-C-left 100 @puny-conv 50 S-ins 50 @puny-rst 10 @puny-switch)
	;; Select a line, convert, paste result, restore clipboard, switch layout
	puny-line (macro S-home 100 @puny-conv 50 S-ins 50 @puny-rst 10 @puny-switch)

	;; Different actions for different number of taps
	puny-ttt0 (tap-dance 200 (@puny-set0 @puny-word @puny-line))
	puny-ttt1 (tap-dance 200 (@puny-set1 @puny-word @puny-line))

	;; Hold Shift: default Shift behaviour (after a timeout)
	;; Shift + any key: default Shift behaviour (immediately)
	;; Tap Shift: initiate tap-dance
	puny-lshift (tap-hold-press 200 200 @puny-ttt0 lshift)
	puny-rshift (tap-hold-press 200 200 @puny-ttt1 rshift)

	;; Mini-layers required for Ctrl-Pause and Shift-Pause to function
	lctrl-ext (multi lctrl (layer-while-held ctrl-layer))
	rctrl-ext (multi rctrl (layer-while-held ctrl-layer))
	lshift-ext (multi @puny-lshift (layer-while-held shift-layer))
	rshift-ext (multi @puny-rshift (layer-while-held shift-layer))

	;; Ctrl-Pause to convert line, Shift-Pause to convert selection
	puny-ctrl-pause (multi (release-key lctrl) (release-key rctrl) @puny-line)
	puny-shift-pause (multi (release-key lshift) (release-key rshift) @puny-sel)
)

(deflayer base
	@puny-word 
    @lshift-ext @rshift-ext 
    @lctrl-ext @rctrl-ext
)

(deflayer ctrl-layer
	@puny-ctrl-pause 
    _      _     
    _     _    
)

(deflayer shift-layer
	@puny-shift-pause 
    _      _     
    _     _    
)
